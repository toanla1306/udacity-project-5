version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  # aws-ecr: circleci/aws-ecr@8.1.2

commands:
  aws_cli_credentials:
    steps:
      - run:
          name: install aws cli and configure credential
          command: |
            pip install awscli
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set aws_session_token $AWS_SESSION_TOKEN
            aws configure set region $AWS_DEFAULT_REGION
jobs:
  build-and-push-image-docker:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws_cli_credentials
      - run:
          name: run build docker and push to ecr
          command: |
            sudo bash
            sudo chmod 666 /var/run/docker.sock
            docker build . -t project-5-learning-udacity:v1
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin "${DOMAIN_REPO_ECR}"
            docker tag project-5-learning-udacity:v1 "${REPOSITORY_ECR}":v1
            docker push "${REPOSITORY_ECR}":v1
      # - aws-ecr/build-and-push-image:
      #     aws-access-key-id: $AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
      #     dockerfile: Dockerfile
      #     region: us-east-2
      #     repo: $REPOSITORY_ECR
      #     tag: latest
  create-cluster:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws_cli_credentials
      - aws-eks/create-cluster:
          cluster-name: cluster-project-5
          aws-region: us-east-2
          # node-ami: ami-052efd3df9dad4825
          node-type: t2.micro
          nodes-min: 1
          nodes-max: 2
          ssh-public-key: project-3-keypem
      # - run:
      #     name: create node group
      #     command: |
      #       eksctl create nodegroup --config-file=infrastructure/node_group.yaml
  # create-cluster:
  #   docker: 
  #     - image: 'cimg/python:3.10'
  #   steps:
  #     - checkout
  #     - aws_cli_credentials
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: cluster-project-5
  #         install-kubectl: true
  #     - kubernetes/create-or-update-resource:
  #         resource-file-path: tests/nginx-deployment/deployment.yaml
  #         resource-name: deployment/nginx-deployment
  # test-cluster:
  #   docker:
  #     - image: 'cimg/python:3.10'
  #   parameters:
  #     cluster-name:
  #       description: |
  #         Name of the EKS cluster
  #       type: string
  #   steps:
  #     - kubernetes/install:
  #         kubectl-version: v1.22.0
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: << parameters.cluster-name >>
  #     - run:
  #         command: |
  #           kubectl get services
  #         name: Test cluster
workflows:
  deployment:
    jobs:
      - build-and-push-image-docker
      # - create-cluster
